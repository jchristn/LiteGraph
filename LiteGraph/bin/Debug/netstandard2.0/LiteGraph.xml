<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LiteGraph</name>
    </assembly>
    <members>
        <member name="T:LiteGraph.EdgeEventArgs">
            <summary>
            Edge event arguments.
            </summary>
        </member>
        <member name="P:LiteGraph.EdgeEventArgs.GUID">
            <summary>
            Globally-unique identifier.
            </summary>
        </member>
        <member name="P:LiteGraph.EdgeEventArgs.FromGUID">
            <summary>
            Globally-unique identifier of the from node.
            </summary>
        </member>
        <member name="P:LiteGraph.EdgeEventArgs.ToGUID">
            <summary>
            Globally-unique identifier of the to node.
            </summary>
        </member>
        <member name="P:LiteGraph.EdgeEventArgs.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC.
            </summary>
        </member>
        <member name="P:LiteGraph.EdgeEventArgs.Properties">
            <summary>
            JSON properties.
            </summary>
        </member>
        <member name="M:LiteGraph.EdgeEventArgs.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:LiteGraph.EdgeEventArgs.#ctor(System.String,System.String,System.String,System.DateTime,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <param name="fromGuid">Globally-unique identifier of the from node.</param>
            <param name="toGuid">Globally-unique identifier of the to node.</param>
            <param name="created">Timestamp from creation, in UTC.</param>
            <param name="props">JSON properties.</param>
        </member>
        <member name="T:LiteGraph.GraphOperation">
            <summary>
            Graph operation.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.AddNode">
            <summary>
            AddNode.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.UpdateNode">
            <summary>
            UpdateNode.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.RemoveNode">
            <summary>
            RemoveNode.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.NodeExists">
            <summary>
            NodeExists.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.GetAllNodes">
            <summary>
            GetAllNodes.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.GetNode">
            <summary>
            GetNode.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.GetNeighbors">
            <summary>
            BreadthFirstSearch.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.SearchNodes">
            <summary>
            SearchNodes.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.GetDescendants">
            <summary>
            GetDescendants.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.AddEdge">
            <summary>
            AddEdge.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.UpdateEdge">
            <summary>
            UpdateEdge.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.RemoveEdge">
            <summary>
            RemoveEdge.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.EdgeExists">
            <summary>
            EdgeExists.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.GetAllEdges">
            <summary>
            GetAllEdges.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.GetEdges">
            <summary>
            GetEdges.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.GetEdge">
            <summary>
            GetEdge.
            </summary>
        </member>
        <member name="F:LiteGraph.GraphOperation.SearchEdges">
            <summary>
            SearchEdges.
            </summary>
        </member>
        <member name="T:LiteGraph.GraphResult">
            <summary>
            Result from a graph operation.
            </summary>
        </member>
        <member name="P:LiteGraph.GraphResult.Operation">
            <summary>
            Type of operation.
            </summary>
        </member>
        <member name="P:LiteGraph.GraphResult.Time">
            <summary>
            Time-related information for the result.
            </summary>
        </member>
        <member name="P:LiteGraph.GraphResult.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="P:LiteGraph.GraphResult.Data">
            <summary>
            Data.  Generally a JArray or JObject.
            </summary>
        </member>
        <member name="M:LiteGraph.GraphResult.#ctor(LiteGraph.GraphOperation)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="operation">Type of operation.</param>
        </member>
        <member name="T:LiteGraph.LiteGraphClient">
            <summary>
            LiteGraph client.
            </summary>
        </member>
        <member name="P:LiteGraph.LiteGraphClient.Logger">
            <summary>
            Logger settings.
            </summary>
        </member>
        <member name="P:LiteGraph.LiteGraphClient.MaxStatementLength">
            <summary>
            Maximum supported statement length.
            </summary>
        </member>
        <member name="P:LiteGraph.LiteGraphClient.NodeGuidProperty">
            <summary>
            GUID property that must be present in every node added to the graph.
            </summary>
        </member>
        <member name="P:LiteGraph.LiteGraphClient.EdgeGuidProperty">
            <summary>
            GUID property that must be present in every edge added to the graph.
            </summary>
        </member>
        <member name="P:LiteGraph.LiteGraphClient.JsonFormatting">
            <summary>
            JSON.NET formatting mode.
            </summary>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.#ctor(System.String,LiteGraph.LoggerSettings)">
            <summary>
            LiteGraph client.
            </summary>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.Dispose">
            <summary>
            Tear down the client and dispose of resources.
            </summary>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.AddNode(System.String)">
            <summary>
            Add a node.
            The supplied JSON must contain the globally-unique identifier property as specified in GuidProperty.
            </summary>
            <param name="json">JSON object, which must include the globally-unique identifier property as specified in NodeGuidProperty.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.UpdateNode(System.String)">
            <summary>
            Update a node.
            The supplied JSON must contain the globally-unique identifier property as specified in GuidProperty.
            </summary>
            <param name="json">JSON object, which must include the globally-unique identifier property as specified in NodeGuidProperty.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.RemoveNode(System.String)">
            <summary>
            Remove a node and its edges by the node's globally-unique identifier.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.NodeExists(System.String)">
            <summary>
            Check if a node exists by its globally-unique identifier.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.GetAllNodes">
            <summary>
            Retrieve all nodes.
            </summary>
            <returns>Graph result where 'Data' contains a JArray.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.GetNode(System.String)">
            <summary>
            Retrieve a node.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <returns>Graph result where 'Data' contains a JObject.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.GetNeighbors(System.String,System.Int32,System.Int32)">
            <summary>
            Retrieve a node's neighbors.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <param name="indexStart">Starting index.</param>
            <param name="maxResults">Maximum number of results to retrieve.</param>
            <returns>Graph result where 'Data' contains a JArray.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.SearchNodes(System.Collections.Generic.List{System.String},System.Collections.Generic.List{LiteGraph.SearchFilter},System.Int32,System.Int32)">
            <summary>
            Search nodes.
            </summary>
            <param name="guids">Subset of node GUIDs to search.</param>
            <param name="filters">Filters to apply against each node's JSON data.</param>
            <param name="indexStart">Starting index.</param>
            <param name="maxResults">Maximum number of results to retrieve.</param>
            <returns>Graph result where 'Data' contains a JArray.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.GetDescendants(System.String,System.Int32)">
            <summary>
            Retrieve a tree from the supplied node.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <param name="maxDepth">The maximum depth to search.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.AddEdge(System.String,System.String,System.String)">
            <summary>
            Add an edge from one node to another.
            </summary>
            <param name="fromGuid">Globally-unique identifier of the source node.</param>
            <param name="toGuid">Globally-unique identifier of the target node.</param>
            <param name="json">JSON object, which must include the globally-unique identifier property as specified in EdgeGuidProperty.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.UpdateEdge(System.String)">
            <summary>
            Update an edge's properties.
            </summary>
            <param name="json">JSON object, which must include the globally-unique identifier property as specified in EdgeGuidProperty.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.RemoveEdge(System.String)">
            <summary>
            Remove an edge by its globally-unique identifier.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.EdgeExists(System.String)">
            <summary>
            Check if an edge exists by its globally-unique identifier.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.GetAllEdges">
            <summary>
            Retrieve all edges.
            </summary>
            <returns>Graph result where 'Data' contains a JArray.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.GetEdges(System.String,System.Int32,System.Int32)">
            <summary>
            Retrieve all edges to or from a given node.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <param name="indexStart">Starting index.</param>
            <param name="maxResults">Maximum number of results to retrieve.</param>
            <returns>Graph result where 'Data' contains a JArray.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.GetEdge(System.String)">
            <summary>
            Retrieve an edge.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <returns>Graph result where 'Data' contains a JObject.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.SearchEdges(System.Collections.Generic.List{System.String},System.Collections.Generic.List{LiteGraph.SearchFilter},System.Int32,System.Int32)">
            <summary>
            Search edges.
            </summary>
            <param name="guids">Subset of edge GUIDs, from node GUIDs, and to node GUIDs to search.</param>
            <param name="filters">Filters to apply against each edge's JSON data.</param>
            <param name="indexStart">Starting index.</param>
            <param name="maxResults">Maximum number of results to retrieve.</param>
            <returns>Graph result where 'Data' contains a JArray.</returns>
        </member>
        <member name="M:LiteGraph.LiteGraphClient.Dispose(System.Boolean)">
            <summary>
            Dispose of the object.
            </summary>
            <param name="disposing">Disposing of resources.</param>
        </member>
        <member name="T:LiteGraph.LiteGraphEvents">
            <summary>
            LiteGraph events.
            </summary>
        </member>
        <member name="E:LiteGraph.LiteGraphEvents.NodeAdded">
            <summary>
            Event fired when a node is added.
            </summary>
        </member>
        <member name="E:LiteGraph.LiteGraphEvents.NodeUpdated">
            <summary>
            Event fired when a node is updated.
            </summary>
        </member>
        <member name="E:LiteGraph.LiteGraphEvents.NodeRemoved">
            <summary>
            Event fired when a node is removed.
            </summary>
        </member>
        <member name="E:LiteGraph.LiteGraphEvents.EdgeAdded">
            <summary>
            Event fired when an edge is added.
            </summary>
        </member>
        <member name="E:LiteGraph.LiteGraphEvents.EdgeUpdated">
            <summary>
            Event fired when an edge is updated.
            </summary>
        </member>
        <member name="E:LiteGraph.LiteGraphEvents.EdgeRemoved">
            <summary>
            Event fired when an edge is removed.
            </summary>
        </member>
        <member name="M:LiteGraph.LiteGraphEvents.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:LiteGraph.LoggerSettings">
            <summary>
            Logging settings.
            </summary>
        </member>
        <member name="P:LiteGraph.LoggerSettings.Header">
            <summary>
            Header to prepend to all log messages.
            </summary>
        </member>
        <member name="P:LiteGraph.LoggerSettings.LogMethod">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="P:LiteGraph.LoggerSettings.LogQueries">
            <summary>
            Enable or disable logging of queries.
            </summary>
        </member>
        <member name="P:LiteGraph.LoggerSettings.LogResults">
            <summary>
            Enable or disable logging of results.
            </summary>
        </member>
        <member name="M:LiteGraph.LoggerSettings.#ctor">
            <summary>
            Logging settings.
            </summary>
        </member>
        <member name="T:LiteGraph.NodeEventArgs">
            <summary>
            Node event arguments.
            </summary>
        </member>
        <member name="P:LiteGraph.NodeEventArgs.GUID">
            <summary>
            Globally-unique identifier.
            </summary>
        </member>
        <member name="P:LiteGraph.NodeEventArgs.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC.
            </summary>
        </member>
        <member name="P:LiteGraph.NodeEventArgs.Properties">
            <summary>
            JSON properties.
            </summary>
        </member>
        <member name="M:LiteGraph.NodeEventArgs.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:LiteGraph.NodeEventArgs.#ctor(System.String,System.DateTime,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="guid">Globally-unique identifier.</param>
            <param name="created">Timestamp from creation, in UTC.</param>
            <param name="props">JSON properties.</param>
        </member>
        <member name="T:LiteGraph.ObjectExtensions">
            <summary>
            Object extensions.
            </summary>
        </member>
        <member name="M:LiteGraph.ObjectExtensions.ToJson(System.Object,System.Boolean)">
            <summary>
            Create a JSON representation of the object.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Enable or disable pretty print.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="T:LiteGraph.SearchCondition">
            <summary>
            Available conditions for search filters.
            </summary> 
        </member>
        <member name="F:LiteGraph.SearchCondition.Equals">
            <summary>
            The left and right terms are equal to one another.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.NotEquals">
            <summary>
            The left and right terms are not equal to one another.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.GreaterThan">
            <summary>
            The left term is greater than the right term.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.GreaterThanOrEqualTo">
            <summary>
            The left term is greater than or equal to the right term.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.LessThan">
            <summary>
            The left term is less than the right term.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.LessThanOrEqualTo">
            <summary>
            The left term is less than or equal to the right term.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.IsNull">
            <summary>
            The left term is null.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.IsNotNull">
            <summary>
            The left term is not null.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.Contains">
            <summary>
            The left term is contained within the right term (list).
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.ContainsNot">
            <summary>
            The left term is not contained within the right term (list).
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.StartsWith">
            <summary>
            The left term starts with the right term.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchCondition.EndsWith">
            <summary>
            The left term ends with the right term.
            </summary>
        </member>
        <member name="T:LiteGraph.SearchFilter">
            <summary>
            A search filter.
            </summary>
        </member>
        <member name="P:LiteGraph.SearchFilter.Field">
            <summary>
            The field upon which to match.
            </summary>
        </member>
        <member name="F:LiteGraph.SearchFilter.Condition">
            <summary>
            The condition by which the parsed document's content is evaluated against the supplied value.
            </summary>
        </member>
        <member name="P:LiteGraph.SearchFilter.Value">
            <summary>
            The value to be evaluated using the specified condition against the parsed document's content.
            When using GreaterThan, GreaterThanOrEqualTo, LessThan, or LessThanOrEqualTo, the value supplied must be convertible to decimal.
            </summary>
        </member>
        <member name="M:LiteGraph.SearchFilter.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:LiteGraph.SearchFilter.#ctor(System.String,LiteGraph.SearchCondition,System.String)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="field">Field.</param>
            <param name="condition">SearchCondition.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:LiteGraph.SearchFilter.EvaluateValue(System.Object)">
            <summary>
            Evaluates a value against the search filter.
            </summary>
            <param name="value">Value.</param>
            <returns>True if matched.</returns>
        </member>
        <member name="T:LiteGraph.Timestamps">
            <summary>
            Object used to measure start, end, and total time associated with an operation.
            </summary>
        </member>
        <member name="P:LiteGraph.Timestamps.Start">
            <summary>
            The time at which the operation started.
            </summary>
        </member>
        <member name="P:LiteGraph.Timestamps.End">
            <summary>
            The time at which the operation ended.
            </summary>
        </member>
        <member name="P:LiteGraph.Timestamps.TotalMs">
            <summary>
            The total number of milliseconds that transpired between Start and End.
            </summary>
        </member>
        <member name="M:LiteGraph.Timestamps.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:LiteGraph.TraversalAlgorithm">
            <summary>
            Graph traversal algorithm.
            </summary>
        </member>
        <member name="F:LiteGraph.TraversalAlgorithm.BreadthFirstSearch">
            <summary>
            BreadthFirstSearch
            </summary>
        </member>
        <member name="F:LiteGraph.TraversalAlgorithm.DepthFirstSearch">
            <summary>
            DepthFirstSearch
            </summary>
        </member>
    </members>
</doc>
